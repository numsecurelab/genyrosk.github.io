{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["ArticleWrapper","styled","div","isDark","theme","css","mainTextColor","Section","Header","header","Title","TagsContainer","Tag","tag","background","color","Date","ImgWrapper","Article","article","Content","Delimter","ThankYouForReading","Author","AuthorName","ProfilePictureWrapper","ProfilePicture","profilePictureBg","MorePosts","PostTitle","Post","NavLink","title","path","to","Page","data","pageContext","prev","next","useContext","DarkModeContext","markdownRemark","html","timeToRead","frontmatter","date","tags","featuredImage","featuredImgFluid","childImageSharp","fluid","map","key","dangerouslySetInnerHTML","__html","fields","slug"],"mappings":"wPAWMA,EAAiBC,IAAOC,IAAV,qFAIhB,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OAAuBC,YAAtB,IAAD,iFAEWF,EAAS,QAAUC,EAAME,kBAKlCC,EAAUN,IAAOC,IAAV,8GAbI,SAoBXM,EAASP,IAAOQ,OAAV,0BAENC,EAAQT,IAAOC,IAAV,0BAELS,EAAgBV,IAAOC,IAAV,kKASbU,EAAMX,IAAOC,IAAV,2UAYO,qBAAGE,MAAkBS,IAAIC,cAC9B,qBAAGV,MAAkBS,IAAIE,SAG9BC,EAAOf,IAAOC,IAAV,0BAEJe,EAAahB,IAAOC,IAAV,+JAQVgB,EAAUjB,IAAOkB,QAAV,0BAEPC,EAAUnB,IAAOC,IAAV,8hBA4BPmB,EAAWpB,IAAOC,IAAV,gHAzFG,SA6FU,qBAAGE,MAAkBE,iBAG1CgB,EAAqBrB,IAAOC,IAAV,+IAQlBqB,EAAStB,IAAOC,IAAV,0FAMNsB,EAAavB,IAAOC,IAAV,gGAMVuB,EAAwBxB,IAAOC,IAAV,+FAMrBwB,EAAiBzB,IAAOC,IAAV,iWAIJ,qBAAGE,MAAkBuB,oBAe/BC,EAAY3B,IAAOC,IAAV,8FAKT2B,EAAY5B,IAAOC,IAAV,0BACT4B,EAAO7B,IAAOkB,QAAV,mNAIC,qBAAGf,MAAkBE,gBAGpBuB,GAKNE,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACd,YAAC,OAAD,CAAMC,GAAID,GACR,YAACH,EAAD,KACE,iCACA,YAACD,EAAD,KAAYG,MAoFHG,UA/EF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACNpC,EAAWqC,qBAAWC,KAAtBtC,OAF8B,EAQlCiC,EAAKM,eAHPC,EALoC,EAKpCA,KACAC,EANoC,EAMpCA,WANoC,IAOpCC,YAAeC,EAPqB,EAOrBA,KAAMd,EAPe,EAOfA,MAAOe,EAPQ,EAORA,KAAMC,EAPE,EAOFA,cAEhCC,EAAmBD,aAAH,EAAGA,EAAeE,gBAAgBC,MAEtD,OACE,YAAC,IAAD,KACE,YAAC,IAAD,MAIA,YAACnD,EAAD,CAAgBG,OAAQA,GACtB,YAACI,EAAD,KACE,YAACC,EAAD,KACE,YAACE,EAAD,KACE,sBAAKsB,IAEP,YAACrB,EAAD,KACGoC,EAAKK,KAAI,SAAAvC,GAAG,OACX,YAACD,EAAD,CAAKyC,IAAKxC,GAAMA,OAGpB,YAACG,EAAD,KAAO8B,EAAP,IAAa,+BAAb,IAAoCF,EAApC,eAKJ,YAAC3B,EAAD,KACE,YAAC,IAAD,CAAKkC,MAAOF,KAEd,YAAC1C,EAAD,KACE,YAACW,EAAD,KACE,YAACE,EAAD,CAASkC,wBAAyB,CAAEC,OAAQZ,OAIhD,YAACpC,EAAD,KACE,YAACc,EAAD,MACA,YAACE,EAAD,KACE,YAACE,EAAD,KACE,YAACC,EAAD,KACE,YAAC,IAAD,QAGJ,YAACF,EAAD,wBAEF,YAACF,EAAD,4DAKF,YAACf,EAAD,KACE,YAACqB,EAAD,KACGU,GACC,YAACP,EAAD,CACEC,MAAOM,EAAKO,YAAYb,MACxBC,KAAMK,EAAKkB,OAAOC,OAGrBlB,GACC,YAACR,EAAD,CACEC,MAAOO,EAAKM,YAAYb,MACxBC,KAAMM,EAAKiB,OAAOC","file":"component---src-templates-blog-post-js-b0adb34a6c8d5f76e02b.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { LayoutJustNav, ProfileImage, SEO } from '../components'\nimport { DarkModeContext } from '../styles/theme'\n\n\nconst maxWidth = '800px'\n\nconst ArticleWrapper = styled.div`\n  padding: 1px 0 20px;\n  margin-bottom: 2rem;\n\n  ${({ isDark, theme }) => css`\n    h1, h2, h3, h4, h5, h6 {\n      color: ${isDark ? 'white' : theme.mainTextColor};\n    }\n  `}\n`\n\nconst Section = styled.div`\n  max-width: ${maxWidth};\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 0.6rem 1.5rem;\n`\n\nconst Header = styled.header``\n\nconst Title = styled.div``\n\nconst TagsContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  margin: 0 0 10px;\n  padding: 0;\n`\n\nconst Tag = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.10rem 0.37rem;\n  margin-top: 0.28rem;\n  margin-right: 0.28rem;\n  margin-bottom: 0;\n  margin-left: 0;\n  background-color: #477aff;\n  color: white; // #67717D white\n  font-size: 13px;\n  border-radius: 4px;\n  background: ${({ theme }) => theme.tag.background };\n  color: ${({ theme }) => theme.tag.color };\n`\n\nconst Date = styled.div``\n\nconst ImgWrapper = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  box-shadow: 0px 6px 12px rgb(0 0 0 / 20%);\n  overflow: hidden;\n  margin-bottom: 24px;\n`\n\nconst Article = styled.article``\n\nconst Content = styled.div`\n  min-height: 80vh;\n\n  blockquote {\n    background: #f9f9f9;\n    font-style: italic;\n    border-left: 10px solid #bbb;\n    margin: 1.5em 0.5rem;\n    padding: 0.4rem 1rem;\n    quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\n    font-size: 1rem;\n  }\n\n  blockquote:before {\n    color: #ccc;\n    content: open-quote;\n    // content: close-quote;\n    font-size: 4em;\n    line-height: 0.1em;\n    margin-right: 0.2em;\n    vertical-align: -0.4em;\n  }\n\n  blockquote p {\n    display: inline;\n  }\n`\n\nconst Delimter = styled.div`\n  height: 0px;\n  max-width: ${maxWidth};\n  margin: 0 auto;\n  border-top: 2px dashed ${({ theme }) => theme.mainTextColor };\n`\n\nconst ThankYouForReading = styled.div`\n  text-align: center;\n  font-size: 1.35rem;\n  font-family: Roboto;\n  font-weight: 300;\n  margin: 20px 0 10px;\n`\n\nconst Author = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n`\n\nconst AuthorName = styled.div`\n  font-size: 1.05rem;\n  font-family: Roboto;\n  font-weight: 400;\n`\n\nconst ProfilePictureWrapper = styled.div`\n  margin: 12px;\n  display: flex;\n  justify-content: flex-start;\n`\n\nconst ProfilePicture = styled.div`\n  width: 62px;\n  height: 62px;\n  margin-bottom: 4px;\n  background: ${({ theme }) => theme.profilePictureBg };\n  box-shadow: 0 4px 8px rgba(30, 30, 30, 0.2);\n  /* bg-blur */\n  backdrop-filter: blur(20px);\n  border-radius: 50%;\n  overflow: hidden;\n\n  /** image mask */\n  /* clip-path: circle(50% at 55% 55%); */\n\n  img {\n    border-radius: 50%;\n  }\n`\n\nconst MorePosts = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n`\nconst PostTitle = styled.div``\nconst Post = styled.article`\n  /* box-shadow: 0px 6px 12px rgb(0 0 0 / 20%); */\n  margin: 8px 0;\n  border-radius: 8px;\n  color: ${({ theme }) => theme.mainTextColor };\n  display: flex;\n\n  &:hover ${PostTitle} {\n    text-decoration: underline;\n  }\n`\n\nconst NavLink = ({ title, path }) => (\n  <Link to={path}>\n    <Post>\n      <div>ðŸ‘‰&nbsp;&nbsp;&nbsp;&nbsp;</div>\n      <PostTitle>{title}</PostTitle>\n    </Post>\n  </Link>\n)\n\nconst Page = ({ data, pageContext }) => {\n  const { prev, next } = pageContext\n  const { isDark } = useContext(DarkModeContext)\n\n  const {\n    html,\n    timeToRead,\n    frontmatter: { date, title, tags, featuredImage },\n  } = data.markdownRemark\n  let featuredImgFluid = featuredImage?.childImageSharp.fluid\n\n  return (\n    <LayoutJustNav>\n      <SEO\n        // title=\"Home\"\n        // keywords={[`programming`, `blog`, `python`, `data science`, `coding`]}\n      />\n      <ArticleWrapper isDark={isDark}>\n        <Section>\n          <Header>\n            <Title>\n              <h1>{title}</h1>\n            </Title>\n            <TagsContainer>\n              {tags.map(tag => (\n                <Tag key={tag}>{tag}</Tag>\n              ))}\n            </TagsContainer>\n            <Date>{date} <span> &#183; </span> {timeToRead} min read</Date>\n          </Header>\n        </Section>\n\n        {/* <StyledBackgroundSection fluid={featuredImgFluid} /> */}\n        <ImgWrapper>\n          <Img fluid={featuredImgFluid} />\n        </ImgWrapper>\n        <Section>\n          <Article>\n            <Content dangerouslySetInnerHTML={{ __html: html }} />\n          </Article>\n        </Section>\n\n        <Section>\n          <Delimter />\n          <Author>\n            <ProfilePictureWrapper>\n              <ProfilePicture>\n                <ProfileImage />\n              </ProfilePicture>\n            </ProfilePictureWrapper>\n            <AuthorName>Evgeny Roskach</AuthorName>\n          </Author>\n          <ThankYouForReading>\n            ðŸ™Œ &nbsp; Thank you for reading ! Check out more posts.\n          </ThankYouForReading>\n        </Section>\n\n        <Section>\n          <MorePosts>\n            {prev && (\n              <NavLink\n                title={prev.frontmatter.title}\n                path={prev.fields.slug}\n              />\n            )}\n            {next && (\n              <NavLink\n                title={next.frontmatter.title}\n                path={next.fields.slug}\n              />\n            )}\n          </MorePosts>\n        </Section>\n\n      </ArticleWrapper>\n    </LayoutJustNav>\n  )\n}\n\nexport default Page\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMM DD, YYYY\")\n        tags\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}