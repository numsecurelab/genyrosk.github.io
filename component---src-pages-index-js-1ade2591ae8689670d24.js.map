{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["MainContentWrapper","styled","div","MainContent","isMobile","css","ArticlesList","IndexPage","data","useMobileView","title","keywords","allMarkdownRemark","edges","map","node","article","key","id"],"mappings":"sLAQMA,EAAqBC,IAAOC,IAAV,uDAGlBC,EAAcF,IAAOC,IAAV,+FAIb,qBAAGE,UAA2BC,YAAJ,0IAOxBC,EAAeL,IAAOC,IAAV,0BA0BHK,UAxBG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbJ,EAAWK,cACjB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,MAAM,OACNC,SAAU,CAAC,cAAD,2CAEZ,YAACR,EAAD,CAAaC,SAAUA,GACrB,YAACJ,EAAD,KACE,YAAC,IAAD,sBAEF,YAACM,EAAD,KACGE,EAAKI,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACnC,OACE,YAAC,IAAD,CAAgBC,QAASD,EAAME,IAAKF,EAAKG","file":"component---src-pages-index-js-1ade2591ae8689670d24.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled, { css } from 'styled-components'\n\nimport { LayoutWithProfile, MainTitle, ArticlePreview, SEO } from '../components'\nimport { useMobileView } from '../utils/hooks'\n\n\nconst MainContentWrapper = styled.div`\n  align-self: flex-start;\n`\nconst MainContent = styled.div`\n  max-width: 650px;\n  padding: 20px 0;\n  margin: 0 auto;\n  ${({ isMobile }) => isMobile && css`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  `}\n`\nconst ArticlesList = styled.div``\n\nconst IndexPage = ({ data }) => {\n  const isMobile = useMobileView()\n  return (\n    <LayoutWithProfile>\n      <SEO\n        title=\"Home\"\n        keywords={[`programming`, `blog`, `python`, `data science`, `coding`]}\n      />\n      <MainContent isMobile={isMobile}>\n        <MainContentWrapper>\n          <MainTitle>Latest posts</MainTitle>\n        </MainContentWrapper>\n        <ArticlesList>\n          {data.allMarkdownRemark.edges.map(({ node }) => {\n            return (\n              <ArticlePreview article={node} key={node.id} />\n            )\n          })}\n        </ArticlesList>\n      </MainContent>\n    </LayoutWithProfile>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          snippet\n          excerpt(format: HTML, pruneLength: 500)\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            description\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}